// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/PC.hdl
/**
 * A 16-bit counter.
 * if      reset(t): out(t+1) = 0
 * else if load(t):  out(t+1) = in(t)
 * else if inc(t):   out(t+1) = out(t) + 1
 * else              out(t+1) = out(t)
 */
CHIP PC {
    IN in[16], reset, load, inc;
    OUT out[16];
    
    PARTS:

        Or(a= load, b= reset, out= regUpdateInt);
        Or(a= regUpdateInt, b= inc, out= regLoad);

        Inc16(in= regOut, out= incOut);
        And16(
            a[0]= false, a[1]= false, a[2]= false, 
            a[3]= false, a[4]= false, a[5]= false, 
            a[6]= false, a[7]= false, a[8]= false, 
            a[9]= false, a[10]= false, a[11]= false, 
            a[12]= false, a[13]= false, a[14]= false, 
            a[15]= false, 
            b[0..15]= regOut, out= resetOut
        );
        
        Mux8Way16( 
            a= regOut, b= incOut, c= in, d= in, 
            e= resetOut, f= resetOut, g= resetOut, h= resetOut,
            sel[2]= reset, sel[1] = load, sel[0] = inc,
            out= muxSelection
        );

        Register(in= muxSelection, load= regLoad, out= regOut);

        And16(a= regOut, b= regOut, out= out);
        

}